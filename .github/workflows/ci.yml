name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.11', '3.12']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 wordle_bot/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 wordle_bot/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Type check with mypy
      run: |
        pip install mypy
        mypy wordle_bot/ --ignore-missing-imports

    - name: Test with pytest
      run: |
        pip install pytest pytest-cov pytest-asyncio
        pytest tests/ --cov=wordle_bot --cov-report=xml --cov-report=term-missing -v

    - name: Upload coverage reports
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run integration tests
      run: |
        python -m pytest tests/integration/ -v --timeout=60

    - name: Test CLI commands
      run: |
        python -m wordle_bot.main --help
        python -m wordle_bot.main solve --target-word "crane" --max-guesses 6 --no-display
        python -m wordle_bot.main benchmark --games 5 --no-display

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t wordle-bot:test .

    - name: Test Docker image
      run: |
        docker run --rm wordle-bot:test --help
        docker run --rm wordle-bot:test solve --target-word "tests" --max-guesses 6 --no-display