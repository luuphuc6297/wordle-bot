name: CI

on:
  push:
    branches: [ main, alpha ]
  pull_request:
    branches: [ main, alpha ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv sync --all-extras

    - name: Check code formatting
      run: |
        uv run black --check --diff .
        uv run isort --check-only --diff .
        uv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        uv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Type checking
      run: |
        uv run basedpyright .

    - name: Run tests
      run: |
        uv run pytest libs/*/tests/ -v

    - name: Test CLI app
      run: |
        PYTHONPATH=libs uv run python -m apps.cli.main --help
        PYTHONPATH=libs uv run python -m apps.cli.main simulate CRANE --time-budget 1

    - name: Test API app
      run: |
        PYTHONPATH=libs uv run python -c "from apps.api.app import app; print('API loaded successfully')"

    - name: Test core algorithms
      run: |
        PYTHONPATH=libs uv run python -c "from libs.core.algorithms.analytics_engine import AnalyticsEngine; print('Core algorithms loaded successfully')"
